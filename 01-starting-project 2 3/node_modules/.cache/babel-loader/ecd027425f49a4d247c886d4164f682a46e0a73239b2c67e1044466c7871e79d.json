{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgrant/code/AndrewJBGrant/react/react-complete-guide/01-starting-project 2 3/src/components/CourseGoals/CourseInput/CourseInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n\n& label {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.5rem;\n}\n\n& input {\n  display: block;\n  width: 100%;\n  border: 1px solid  ${props.inval}#ccc;\n  font: inherit;\n  line-height: 1.5rem;\n  padding: 0 0.25rem;\n}\n\n& input:focus {\n  outline: none;\n  background: #fad0ec;\n  border-color: #8b005d;\n}\n\n&.invalid input {\n  border-color: red;\n  background: #ffd7d7;\n}\n\n&.invalid label {\n  color: rgb(190, 43, 43);\n}\n\n\n\n\n`;\n_c = FormControl;\nconst CourseInput = props => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const goalInputChangeHandler = event => {\n    setEnteredValue(event.target.value);\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    // this if statement checks if the input is empty.\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      className: !isValid && 'invalid',\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // style={{\n        //   borderColor: !isValid ? \"red\" : \"black\",\n        //   background: !isValid ? \"salmon\" : \"transparent\",\n        // }}\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseInput, \"ThKE3neuvaE9uj2GU0j+/HEwCa4=\");\n_c2 = CourseInput;\nexport default CourseInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"CourseInput\");","map":{"version":3,"names":["React","useState","styled","Button","jsxDEV","_jsxDEV","FormControl","div","props","inval","_c","CourseInput","_s","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c2","$RefreshReg$"],"sources":["/Users/andrewgrant/code/AndrewJBGrant/react/react-complete-guide/01-starting-project 2 3/src/components/CourseGoals/CourseInput/CourseInput.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\n\n\nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n\n& label {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.5rem;\n}\n\n& input {\n  display: block;\n  width: 100%;\n  border: 1px solid  ${props.inval}#ccc;\n  font: inherit;\n  line-height: 1.5rem;\n  padding: 0 0.25rem;\n}\n\n& input:focus {\n  outline: none;\n  background: #fad0ec;\n  border-color: #8b005d;\n}\n\n&.invalid input {\n  border-color: red;\n  background: #ffd7d7;\n}\n\n&.invalid label {\n  color: rgb(190, 43, 43);\n}\n\n\n\n\n`\n\nconst CourseInput = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const goalInputChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    // this if statement checks if the input is empty.\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <FormControl className={!isValid && 'invalid'}>\n      {/* <div className={`form-control ${!isValid ? 'invalid' : ''}`}> */}\n        {/* // Inline style wants an object as a value style={{}} */}\n        {/* <label style={{ color: !isValid ? \"red\" : \"black \" }}> */}\n        <label>\n          Course Goal\n        </label>\n        <input\n          // style={{\n          //   borderColor: !isValid ? \"red\" : \"black\",\n          //   background: !isValid ? \"salmon\" : \"transparent\",\n          // }}\n          type=\"text\"\n          onChange={goalInputChangeHandler}\n        />\n      {/* </div> */}\n      </FormControl>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3B,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuBC,KAAK,CAACC,KAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,EAAA,GArCKJ,WAAW;AAuCjB,MAAMK,WAAW,GAAIH,KAAK,IAAK;EAAAI,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMgB,sBAAsB,GAAIC,KAAK,IAAK;IACxCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACnC,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC,EAAE;MACxCN,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAED,MAAMO,iBAAiB,GAAIL,KAAK,IAAK;IACnCA,KAAK,CAACM,cAAc,EAAE;IACtB;IACA,IAAIX,YAAY,CAACQ,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACpCN,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IACAR,KAAK,CAACiB,SAAS,CAACZ,YAAY,CAAC;EAC/B,CAAC;EAED,oBACER,OAAA;IAAMqB,QAAQ,EAAEH,iBAAkB;IAAAI,QAAA,gBAChCtB,OAAA,CAACC,WAAW;MAACsB,SAAS,EAAE,CAACb,OAAO,IAAI,SAAU;MAAAY,QAAA,gBAI5CtB,OAAA;QAAAsB,QAAA,EAAO;MAEP;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACR3B,OAAA;QACE;QACA;QACA;QACA;QACA4B,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAEjB;MAAuB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEU,eACd3B,OAAA,CAACF,MAAM;MAAC8B,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClC;AAEX,CAAC;AAACpB,EAAA,CA1CID,WAAW;AAAAwB,GAAA,GAAXxB,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}